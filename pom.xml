<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <packaging>pom</packaging>
  <groupId>com.liveramp.workflow2</groupId>
  <artifactId>workflow</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <skip.db>true</skip.db>
    <skip.assembly>true</skip.assembly>
  </properties>

  <modules>
    <module>workflow_types</module>
    <module>workflow_core</module>
    <module>workflow_db</module>
    <module>workflow_state</module>
    <module>workflow_ui</module>
    <module>workflow_monitor</module>
    <module>workflow_hadoop</module>
  </modules>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M1</version>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>

        <configuration>
          <skipAssembly>${skip.assembly}</skipAssembly>
          <tarLongFileMode>posix</tarLongFileMode>
        </configuration>

        <executions>

          <execution>
            <id>deploy</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${project.artifactId}.job</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptorRefs>
                <descriptorRef>workflow-uberjar</descriptorRef>
              </descriptorRefs>
              <attach>false</attach>
            </configuration>
          </execution>

          <execution>
            <id>deploy-bundle</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptorRefs>
                <descriptorRef>workflow-deploy</descriptorRef>
              </descriptorRefs>
              <attach>true</attach>
            </configuration>
          </execution>

        </executions>

        <dependencies>
          <dependency>
            <groupId>com.liveramp.workflow2</groupId>
            <artifactId>workflow_assemblies</artifactId>
            <version>1.0-SNAPSHOT</version>
          </dependency>
        </dependencies>

      </plugin>

      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <executions>
          <execution>
            <id>start-db</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skip.db}</skip>
              <executable>${project.basedir}/../test_docker/start-db.sh</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <executions>
          <execution>
            <id>stop-db</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skip.db}</skip>
              <executable>${project.basedir}/../test_docker/stop-mysql.sh</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <repositories>

    <!--disable maven central since we want to proxy that-->
    <repository>
      <id>central</id>
      <url>http://repo1.maven.org/maven2</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>all-snapshots</id>
      <url>http://library.liveramp.net/artifactory/all-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>

    <repository>
      <id>libs-release</id>
      <url>http://library.liveramp.net/artifactory/libs-release</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

  </repositories>


  <pluginRepositories>

    <!--disable maven central so we can proxy it-->
    <pluginRepository>
      <id>central</id>
      <url>http://repo1.maven.org/maven2</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>

    <pluginRepository>
      <id>plugins-snapshot</id>
      <url>http://library.liveramp.net/artifactory/plugins-snapshot</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>

    <pluginRepository>
      <id>all-snapshots</id>
      <url>http://library.liveramp.net/artifactory/all-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>

    <!--everything we want to pull from should be proxied via artifactory-->
    <pluginRepository>
      <id>plugins-release</id>
      <url>http://library.liveramp.net/artifactory/plugins-release</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>

  </pluginRepositories>

  <distributionManagement>

    <snapshotRepository>
      <id>library.liveramp.net</id>
      <name>library.liveramp.net-snapshots</name>
      <url>http://library.liveramp.net/artifactory/libs-snapshot-local</url>
    </snapshotRepository>

    <repository>
      <id>library.liveramp.net</id>
      <name>library.liveramp.net-releases</name>
      <url>http://library.liveramp.net/artifactory/libs-release-local</url>
    </repository>

  </distributionManagement>


</project>
