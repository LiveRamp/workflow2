/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractDeleteBuilder;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.liveramp.databases.workflow_db.iface.IWorkflowExecutionPersistence;
import com.liveramp.databases.workflow_db.models.WorkflowExecution;


public class WorkflowExecutionDeleteBuilder extends AbstractDeleteBuilder<WorkflowExecution> {

  public WorkflowExecutionDeleteBuilder(IWorkflowExecutionPersistence caller) {
    super(caller);
  }

  public WorkflowExecutionDeleteBuilder id(Long value) {
    addId(value);
    return this;
  }

  public WorkflowExecutionDeleteBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public WorkflowExecutionDeleteBuilder appType(Integer value) {
    addWhereConstraint(new WhereConstraint<Integer>(WorkflowExecution._Fields.app_type, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder whereAppType(IWhereOperator<Integer> operator) {
    addWhereConstraint(new WhereConstraint<Integer>(WorkflowExecution._Fields.app_type, operator));
    return this;
  }

  public WorkflowExecutionDeleteBuilder name(String value) {
    addWhereConstraint(new WhereConstraint<String>(WorkflowExecution._Fields.name, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder whereName(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(WorkflowExecution._Fields.name, operator));
    return this;
  }

  public WorkflowExecutionDeleteBuilder scopeIdentifier(String value) {
    addWhereConstraint(new WhereConstraint<String>(WorkflowExecution._Fields.scope_identifier, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder whereScopeIdentifier(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(WorkflowExecution._Fields.scope_identifier, operator));
    return this;
  }

  public WorkflowExecutionDeleteBuilder status(Integer value) {
    addWhereConstraint(new WhereConstraint<Integer>(WorkflowExecution._Fields.status, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder whereStatus(IWhereOperator<Integer> operator) {
    addWhereConstraint(new WhereConstraint<Integer>(WorkflowExecution._Fields.status, operator));
    return this;
  }

  public WorkflowExecutionDeleteBuilder startTime(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowExecution._Fields.start_time, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder whereStartTime(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowExecution._Fields.start_time, operator));
    return this;
  }

  public WorkflowExecutionDeleteBuilder endTime(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowExecution._Fields.end_time, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder whereEndTime(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowExecution._Fields.end_time, operator));
    return this;
  }

  public WorkflowExecutionDeleteBuilder applicationId(Integer value) {
    addWhereConstraint(new WhereConstraint<Integer>(WorkflowExecution._Fields.application_id, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder whereApplicationId(IWhereOperator<Integer> operator) {
    addWhereConstraint(new WhereConstraint<Integer>(WorkflowExecution._Fields.application_id, operator));
    return this;
  }

  public WorkflowExecutionDeleteBuilder poolOverride(String value) {
    addWhereConstraint(new WhereConstraint<String>(WorkflowExecution._Fields.pool_override, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowExecutionDeleteBuilder wherePoolOverride(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(WorkflowExecution._Fields.pool_override, operator));
    return this;
  }
}
