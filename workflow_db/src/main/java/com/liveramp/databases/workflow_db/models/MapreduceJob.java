
/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.models;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.EnumSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;

import com.rapleaf.jack.AssociationType;
import com.rapleaf.jack.AttributesWithId;
import com.rapleaf.jack.BelongsToAssociation;
import com.rapleaf.jack.DefaultAssociationMetadata;
import com.rapleaf.jack.HasManyAssociation;
import com.rapleaf.jack.HasOneAssociation;
import com.rapleaf.jack.IAssociationMetadata;
import com.rapleaf.jack.IModelAssociationMetadata;
import com.rapleaf.jack.ModelIdWrapper;
import com.rapleaf.jack.ModelWithId;
import com.rapleaf.jack.queries.AbstractTable;
import com.rapleaf.jack.queries.Column;

import com.liveramp.databases.workflow_db.IDatabases;
import com.rapleaf.jack.util.JackUtility;

public class MapreduceJob extends ModelWithId<MapreduceJob, IDatabases> implements Comparable<MapreduceJob>{
  
  public static final long serialVersionUID = 318716303774856920L;

  public static class Tbl extends AbstractTable<MapreduceJob.Attributes, MapreduceJob> {
    public final Column<Long> ID;
    public final Column<Long> STEP_ATTEMPT_ID;
    public final Column<String> JOB_IDENTIFIER;
    public final Column<String> JOB_NAME;
    public final Column<String> TRACKING_URL;
    public final Column<Long> AVG_MAP_DURATION;
    public final Column<Long> MEDIAN_MAP_DURATION;
    public final Column<Long> MAX_MAP_DURATION;
    public final Column<Long> MIN_MAP_DURATION;
    public final Column<Long> STDEV_MAP_DURATION;
    public final Column<Long> AVG_REDUCE_DURATION;
    public final Column<Long> MEDIAN_REDUCE_DURATION;
    public final Column<Long> MAX_REDUCE_DURATION;
    public final Column<Long> MIN_REDUCE_DURATION;
    public final Column<Long> STDEV_REDUCE_DURATION;
    public final Column<Integer> TASKS_SAMPLED;
    public final Column<Integer> TASKS_FAILED_IN_SAMPLE;

    private Tbl(String alias) {
      super("mapreduce_jobs", alias, MapreduceJob.Attributes.class, MapreduceJob.class);
      this.ID = Column.fromId(alias);
      this.STEP_ATTEMPT_ID = Column.fromField(alias, _Fields.step_attempt_id, Long.class);
      this.JOB_IDENTIFIER = Column.fromField(alias, _Fields.job_identifier, String.class);
      this.JOB_NAME = Column.fromField(alias, _Fields.job_name, String.class);
      this.TRACKING_URL = Column.fromField(alias, _Fields.tracking_url, String.class);
      this.AVG_MAP_DURATION = Column.fromField(alias, _Fields.avg_map_duration, Long.class);
      this.MEDIAN_MAP_DURATION = Column.fromField(alias, _Fields.median_map_duration, Long.class);
      this.MAX_MAP_DURATION = Column.fromField(alias, _Fields.max_map_duration, Long.class);
      this.MIN_MAP_DURATION = Column.fromField(alias, _Fields.min_map_duration, Long.class);
      this.STDEV_MAP_DURATION = Column.fromField(alias, _Fields.stdev_map_duration, Long.class);
      this.AVG_REDUCE_DURATION = Column.fromField(alias, _Fields.avg_reduce_duration, Long.class);
      this.MEDIAN_REDUCE_DURATION = Column.fromField(alias, _Fields.median_reduce_duration, Long.class);
      this.MAX_REDUCE_DURATION = Column.fromField(alias, _Fields.max_reduce_duration, Long.class);
      this.MIN_REDUCE_DURATION = Column.fromField(alias, _Fields.min_reduce_duration, Long.class);
      this.STDEV_REDUCE_DURATION = Column.fromField(alias, _Fields.stdev_reduce_duration, Long.class);
      this.TASKS_SAMPLED = Column.fromField(alias, _Fields.tasks_sampled, Integer.class);
      this.TASKS_FAILED_IN_SAMPLE = Column.fromField(alias, _Fields.tasks_failed_in_sample, Integer.class);
      Collections.addAll(this.allColumns, ID, STEP_ATTEMPT_ID, JOB_IDENTIFIER, JOB_NAME, TRACKING_URL, AVG_MAP_DURATION, MEDIAN_MAP_DURATION, MAX_MAP_DURATION, MIN_MAP_DURATION, STDEV_MAP_DURATION, AVG_REDUCE_DURATION, MEDIAN_REDUCE_DURATION, MAX_REDUCE_DURATION, MIN_REDUCE_DURATION, STDEV_REDUCE_DURATION, TASKS_SAMPLED, TASKS_FAILED_IN_SAMPLE);
    }

    public static Tbl as(String alias) {
      return new Tbl(alias);
    }
  }

  public static final Tbl TBL = new Tbl("mapreduce_jobs");
  public static final Column<Long> ID = TBL.ID;
  public static final Column<Long> STEP_ATTEMPT_ID = TBL.STEP_ATTEMPT_ID;
  public static final Column<String> JOB_IDENTIFIER = TBL.JOB_IDENTIFIER;
  public static final Column<String> JOB_NAME = TBL.JOB_NAME;
  public static final Column<String> TRACKING_URL = TBL.TRACKING_URL;
  public static final Column<Long> AVG_MAP_DURATION = TBL.AVG_MAP_DURATION;
  public static final Column<Long> MEDIAN_MAP_DURATION = TBL.MEDIAN_MAP_DURATION;
  public static final Column<Long> MAX_MAP_DURATION = TBL.MAX_MAP_DURATION;
  public static final Column<Long> MIN_MAP_DURATION = TBL.MIN_MAP_DURATION;
  public static final Column<Long> STDEV_MAP_DURATION = TBL.STDEV_MAP_DURATION;
  public static final Column<Long> AVG_REDUCE_DURATION = TBL.AVG_REDUCE_DURATION;
  public static final Column<Long> MEDIAN_REDUCE_DURATION = TBL.MEDIAN_REDUCE_DURATION;
  public static final Column<Long> MAX_REDUCE_DURATION = TBL.MAX_REDUCE_DURATION;
  public static final Column<Long> MIN_REDUCE_DURATION = TBL.MIN_REDUCE_DURATION;
  public static final Column<Long> STDEV_REDUCE_DURATION = TBL.STDEV_REDUCE_DURATION;
  public static final Column<Integer> TASKS_SAMPLED = TBL.TASKS_SAMPLED;
  public static final Column<Integer> TASKS_FAILED_IN_SAMPLE = TBL.TASKS_FAILED_IN_SAMPLE;

  private final Attributes attributes;

  private transient MapreduceJob.Id cachedTypedId;

  // Associations
  private BelongsToAssociation<StepAttempt> __assoc_step_attempt;
  private HasManyAssociation<MapreduceCounter> __assoc_mapreduce_counters;
  private HasManyAssociation<MapreduceJobTaskException> __assoc_mapreduce_job_task_exceptions;
  private HasManyAssociation<WorkflowAlertMapreduceJob> __assoc_workflow_alert_mapreduce_job;

  public enum _Fields {
    step_attempt_id,
    job_identifier,
    job_name,
    tracking_url,
    avg_map_duration,
    median_map_duration,
    max_map_duration,
    min_map_duration,
    stdev_map_duration,
    avg_reduce_duration,
    median_reduce_duration,
    max_reduce_duration,
    min_reduce_duration,
    stdev_reduce_duration,
    tasks_sampled,
    tasks_failed_in_sample,
  }

  @Override
  public MapreduceJob.Id getTypedId() {
    if (cachedTypedId == null) {
      cachedTypedId = new MapreduceJob.Id(this.getId());
    }
    return cachedTypedId;
  }

  public MapreduceJob(long id, final Long step_attempt_id, final String job_identifier, final String job_name, final String tracking_url, final Long avg_map_duration, final Long median_map_duration, final Long max_map_duration, final Long min_map_duration, final Long stdev_map_duration, final Long avg_reduce_duration, final Long median_reduce_duration, final Long max_reduce_duration, final Long min_reduce_duration, final Long stdev_reduce_duration, final Integer tasks_sampled, final Integer tasks_failed_in_sample, IDatabases databases) {
    super(databases);
    attributes = new Attributes(id, step_attempt_id, job_identifier, job_name, tracking_url, avg_map_duration, median_map_duration, max_map_duration, min_map_duration, stdev_map_duration, avg_reduce_duration, median_reduce_duration, max_reduce_duration, min_reduce_duration, stdev_reduce_duration, tasks_sampled, tasks_failed_in_sample);
    this.__assoc_step_attempt = new BelongsToAssociation<>(databases.getWorkflowDb().stepAttempts(), getStepAttemptId());
    this.__assoc_mapreduce_counters = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceCounters(), "mapreduce_job_id", getId());
    this.__assoc_mapreduce_job_task_exceptions = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceJobTaskExceptions(), "mapreduce_job_id", getId());
    this.__assoc_workflow_alert_mapreduce_job = new HasManyAssociation<>(databases.getWorkflowDb().workflowAlertMapreduceJobs(), "mapreduce_job_id", getId());
  }

  public MapreduceJob(long id, final Long step_attempt_id, final String job_identifier, final String job_name, final String tracking_url, final Long avg_map_duration, final Long median_map_duration, final Long max_map_duration, final Long min_map_duration, final Long stdev_map_duration, final Long avg_reduce_duration, final Long median_reduce_duration, final Long max_reduce_duration, final Long min_reduce_duration, final Long stdev_reduce_duration, final Integer tasks_sampled, final Integer tasks_failed_in_sample) {
    super(null);
    attributes = new Attributes(id, step_attempt_id, job_identifier, job_name, tracking_url, avg_map_duration, median_map_duration, max_map_duration, min_map_duration, stdev_map_duration, avg_reduce_duration, median_reduce_duration, max_reduce_duration, min_reduce_duration, stdev_reduce_duration, tasks_sampled, tasks_failed_in_sample);
  }
  
  public MapreduceJob(long id, final String job_identifier, final String job_name, final String tracking_url, IDatabases databases) {
    super(databases);
    attributes = new Attributes(id, job_identifier, job_name, tracking_url);
    this.__assoc_step_attempt = new BelongsToAssociation<>(databases.getWorkflowDb().stepAttempts(), getStepAttemptId());
    this.__assoc_mapreduce_counters = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceCounters(), "mapreduce_job_id", getId());
    this.__assoc_mapreduce_job_task_exceptions = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceJobTaskExceptions(), "mapreduce_job_id", getId());
    this.__assoc_workflow_alert_mapreduce_job = new HasManyAssociation<>(databases.getWorkflowDb().workflowAlertMapreduceJobs(), "mapreduce_job_id", getId());
  }

  public MapreduceJob(long id, final String job_identifier, final String job_name, final String tracking_url) {
    super(null);
    attributes = new Attributes(id, job_identifier, job_name, tracking_url);
  }

  public static MapreduceJob newDefaultInstance(long id) {
    return new MapreduceJob(id, "", "", "");
  }

  public MapreduceJob(Attributes attributes, IDatabases databases) {
    super(databases);
    this.attributes = attributes;

    if (databases != null) {
      this.__assoc_step_attempt = new BelongsToAssociation<>(databases.getWorkflowDb().stepAttempts(), getStepAttemptId());
      this.__assoc_mapreduce_counters = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceCounters(), "mapreduce_job_id", getId());
      this.__assoc_mapreduce_job_task_exceptions = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceJobTaskExceptions(), "mapreduce_job_id", getId());
      this.__assoc_workflow_alert_mapreduce_job = new HasManyAssociation<>(databases.getWorkflowDb().workflowAlertMapreduceJobs(), "mapreduce_job_id", getId());
    }
  }

  public MapreduceJob(Attributes attributes) {
    this(attributes, (IDatabases) null);
  }

  public MapreduceJob(long id, Map<Enum, Object> fieldsMap) {
    super(null);
    attributes = new Attributes(id, fieldsMap);
  }

  public MapreduceJob (MapreduceJob other) {
    this(other, (IDatabases)null);
  }

  public MapreduceJob (MapreduceJob other, IDatabases databases) {
    super(databases);
    attributes = new Attributes(other.getAttributes());

    if (databases != null) {
      this.__assoc_step_attempt = new BelongsToAssociation<>(databases.getWorkflowDb().stepAttempts(), getStepAttemptId());
      this.__assoc_mapreduce_counters = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceCounters(), "mapreduce_job_id", getId());
      this.__assoc_mapreduce_job_task_exceptions = new HasManyAssociation<>(databases.getWorkflowDb().mapreduceJobTaskExceptions(), "mapreduce_job_id", getId());
      this.__assoc_workflow_alert_mapreduce_job = new HasManyAssociation<>(databases.getWorkflowDb().workflowAlertMapreduceJobs(), "mapreduce_job_id", getId());
    }
  }

  public Attributes getAttributes() {
    return attributes;
  }

  public Long getStepAttemptId() {
    return attributes.getStepAttemptId();
  }

  public MapreduceJob setStepAttemptId(Long newval) {
    attributes.setStepAttemptId(newval);
    if(__assoc_step_attempt != null){
      this.__assoc_step_attempt.setOwnerId(newval);
    }
    cachedHashCode = 0;
    return this;
  }

  public String getJobIdentifier() {
    return attributes.getJobIdentifier();
  }

  public MapreduceJob setJobIdentifier(String newval) {
    attributes.setJobIdentifier(newval);
    cachedHashCode = 0;
    return this;
  }

  public String getJobName() {
    return attributes.getJobName();
  }

  public MapreduceJob setJobName(String newval) {
    attributes.setJobName(newval);
    cachedHashCode = 0;
    return this;
  }

  public String getTrackingUrl() {
    return attributes.getTrackingUrl();
  }

  public MapreduceJob setTrackingUrl(String newval) {
    attributes.setTrackingUrl(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getAvgMapDuration() {
    return attributes.getAvgMapDuration();
  }

  public MapreduceJob setAvgMapDuration(Long newval) {
    attributes.setAvgMapDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getMedianMapDuration() {
    return attributes.getMedianMapDuration();
  }

  public MapreduceJob setMedianMapDuration(Long newval) {
    attributes.setMedianMapDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getMaxMapDuration() {
    return attributes.getMaxMapDuration();
  }

  public MapreduceJob setMaxMapDuration(Long newval) {
    attributes.setMaxMapDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getMinMapDuration() {
    return attributes.getMinMapDuration();
  }

  public MapreduceJob setMinMapDuration(Long newval) {
    attributes.setMinMapDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getStdevMapDuration() {
    return attributes.getStdevMapDuration();
  }

  public MapreduceJob setStdevMapDuration(Long newval) {
    attributes.setStdevMapDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getAvgReduceDuration() {
    return attributes.getAvgReduceDuration();
  }

  public MapreduceJob setAvgReduceDuration(Long newval) {
    attributes.setAvgReduceDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getMedianReduceDuration() {
    return attributes.getMedianReduceDuration();
  }

  public MapreduceJob setMedianReduceDuration(Long newval) {
    attributes.setMedianReduceDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getMaxReduceDuration() {
    return attributes.getMaxReduceDuration();
  }

  public MapreduceJob setMaxReduceDuration(Long newval) {
    attributes.setMaxReduceDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getMinReduceDuration() {
    return attributes.getMinReduceDuration();
  }

  public MapreduceJob setMinReduceDuration(Long newval) {
    attributes.setMinReduceDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Long getStdevReduceDuration() {
    return attributes.getStdevReduceDuration();
  }

  public MapreduceJob setStdevReduceDuration(Long newval) {
    attributes.setStdevReduceDuration(newval);
    cachedHashCode = 0;
    return this;
  }

  public Integer getTasksSampled() {
    return attributes.getTasksSampled();
  }

  public MapreduceJob setTasksSampled(Integer newval) {
    attributes.setTasksSampled(newval);
    cachedHashCode = 0;
    return this;
  }

  public Integer getTasksFailedInSample() {
    return attributes.getTasksFailedInSample();
  }

  public MapreduceJob setTasksFailedInSample(Integer newval) {
    attributes.setTasksFailedInSample(newval);
    cachedHashCode = 0;
    return this;
  }

  public void setField(_Fields field, Object value) {
    switch (field) {
      case step_attempt_id:
        setStepAttemptId((Long)value);
        break;
      case job_identifier:
        setJobIdentifier((String)value);
        break;
      case job_name:
        setJobName((String)value);
        break;
      case tracking_url:
        setTrackingUrl((String)value);
        break;
      case avg_map_duration:
        setAvgMapDuration((Long)value);
        break;
      case median_map_duration:
        setMedianMapDuration((Long)value);
        break;
      case max_map_duration:
        setMaxMapDuration((Long)value);
        break;
      case min_map_duration:
        setMinMapDuration((Long)value);
        break;
      case stdev_map_duration:
        setStdevMapDuration((Long)value);
        break;
      case avg_reduce_duration:
        setAvgReduceDuration((Long)value);
        break;
      case median_reduce_duration:
        setMedianReduceDuration((Long)value);
        break;
      case max_reduce_duration:
        setMaxReduceDuration((Long)value);
        break;
      case min_reduce_duration:
        setMinReduceDuration((Long)value);
        break;
      case stdev_reduce_duration:
        setStdevReduceDuration((Long)value);
        break;
      case tasks_sampled:
        setTasksSampled((Integer)value);
        break;
      case tasks_failed_in_sample:
        setTasksFailedInSample((Integer)value);
        break;
      default:
        throw new IllegalStateException("Invalid field: " + field);
    }
  }
  
  public void setField(String fieldName, Object value) {
    if (fieldName.equals("step_attempt_id")) {
      setStepAttemptId((Long)  value);
      return;
    }
    if (fieldName.equals("job_identifier")) {
      setJobIdentifier((String)  value);
      return;
    }
    if (fieldName.equals("job_name")) {
      setJobName((String)  value);
      return;
    }
    if (fieldName.equals("tracking_url")) {
      setTrackingUrl((String)  value);
      return;
    }
    if (fieldName.equals("avg_map_duration")) {
      setAvgMapDuration((Long)  value);
      return;
    }
    if (fieldName.equals("median_map_duration")) {
      setMedianMapDuration((Long)  value);
      return;
    }
    if (fieldName.equals("max_map_duration")) {
      setMaxMapDuration((Long)  value);
      return;
    }
    if (fieldName.equals("min_map_duration")) {
      setMinMapDuration((Long)  value);
      return;
    }
    if (fieldName.equals("stdev_map_duration")) {
      setStdevMapDuration((Long)  value);
      return;
    }
    if (fieldName.equals("avg_reduce_duration")) {
      setAvgReduceDuration((Long)  value);
      return;
    }
    if (fieldName.equals("median_reduce_duration")) {
      setMedianReduceDuration((Long)  value);
      return;
    }
    if (fieldName.equals("max_reduce_duration")) {
      setMaxReduceDuration((Long)  value);
      return;
    }
    if (fieldName.equals("min_reduce_duration")) {
      setMinReduceDuration((Long)  value);
      return;
    }
    if (fieldName.equals("stdev_reduce_duration")) {
      setStdevReduceDuration((Long)  value);
      return;
    }
    if (fieldName.equals("tasks_sampled")) {
      setTasksSampled((Integer)  value);
      return;
    }
    if (fieldName.equals("tasks_failed_in_sample")) {
      setTasksFailedInSample((Integer)  value);
      return;
    }
    throw new IllegalStateException("Invalid field: " + fieldName);
  }

  public static Class getFieldType(_Fields field) {
    switch (field) {
      case step_attempt_id:
        return Long.class;
      case job_identifier:
        return String.class;
      case job_name:
        return String.class;
      case tracking_url:
        return String.class;
      case avg_map_duration:
        return Long.class;
      case median_map_duration:
        return Long.class;
      case max_map_duration:
        return Long.class;
      case min_map_duration:
        return Long.class;
      case stdev_map_duration:
        return Long.class;
      case avg_reduce_duration:
        return Long.class;
      case median_reduce_duration:
        return Long.class;
      case max_reduce_duration:
        return Long.class;
      case min_reduce_duration:
        return Long.class;
      case stdev_reduce_duration:
        return Long.class;
      case tasks_sampled:
        return Integer.class;
      case tasks_failed_in_sample:
        return Integer.class;
      default:
        throw new IllegalStateException("Invalid field: " + field);
    }    
  }

  public static Class getFieldType(String fieldName) {    
    if (fieldName.equals("step_attempt_id")) {
      return Long.class;
    }
    if (fieldName.equals("job_identifier")) {
      return String.class;
    }
    if (fieldName.equals("job_name")) {
      return String.class;
    }
    if (fieldName.equals("tracking_url")) {
      return String.class;
    }
    if (fieldName.equals("avg_map_duration")) {
      return Long.class;
    }
    if (fieldName.equals("median_map_duration")) {
      return Long.class;
    }
    if (fieldName.equals("max_map_duration")) {
      return Long.class;
    }
    if (fieldName.equals("min_map_duration")) {
      return Long.class;
    }
    if (fieldName.equals("stdev_map_duration")) {
      return Long.class;
    }
    if (fieldName.equals("avg_reduce_duration")) {
      return Long.class;
    }
    if (fieldName.equals("median_reduce_duration")) {
      return Long.class;
    }
    if (fieldName.equals("max_reduce_duration")) {
      return Long.class;
    }
    if (fieldName.equals("min_reduce_duration")) {
      return Long.class;
    }
    if (fieldName.equals("stdev_reduce_duration")) {
      return Long.class;
    }
    if (fieldName.equals("tasks_sampled")) {
      return Integer.class;
    }
    if (fieldName.equals("tasks_failed_in_sample")) {
      return Integer.class;
    }
    throw new IllegalStateException("Invalid field name: " + fieldName);
  }

  public StepAttempt getStepAttempt() throws IOException {
    return __assoc_step_attempt.get();
  }

  public List<MapreduceCounter> getMapreduceCounters() throws IOException {
    return __assoc_mapreduce_counters.get();
  }

  public List<MapreduceJobTaskException> getMapreduceJobTaskExceptions() throws IOException {
    return __assoc_mapreduce_job_task_exceptions.get();
  }

  public List<WorkflowAlertMapreduceJob> getWorkflowAlertMapreduceJob() throws IOException {
    return __assoc_workflow_alert_mapreduce_job.get();
  }

  @Override
  public Object getField(String fieldName) {
    if (fieldName.equals("id")) {
      return getId();
    }
    if (fieldName.equals("step_attempt_id")) {
      return getStepAttemptId();
    }
    if (fieldName.equals("job_identifier")) {
      return getJobIdentifier();
    }
    if (fieldName.equals("job_name")) {
      return getJobName();
    }
    if (fieldName.equals("tracking_url")) {
      return getTrackingUrl();
    }
    if (fieldName.equals("avg_map_duration")) {
      return getAvgMapDuration();
    }
    if (fieldName.equals("median_map_duration")) {
      return getMedianMapDuration();
    }
    if (fieldName.equals("max_map_duration")) {
      return getMaxMapDuration();
    }
    if (fieldName.equals("min_map_duration")) {
      return getMinMapDuration();
    }
    if (fieldName.equals("stdev_map_duration")) {
      return getStdevMapDuration();
    }
    if (fieldName.equals("avg_reduce_duration")) {
      return getAvgReduceDuration();
    }
    if (fieldName.equals("median_reduce_duration")) {
      return getMedianReduceDuration();
    }
    if (fieldName.equals("max_reduce_duration")) {
      return getMaxReduceDuration();
    }
    if (fieldName.equals("min_reduce_duration")) {
      return getMinReduceDuration();
    }
    if (fieldName.equals("stdev_reduce_duration")) {
      return getStdevReduceDuration();
    }
    if (fieldName.equals("tasks_sampled")) {
      return getTasksSampled();
    }
    if (fieldName.equals("tasks_failed_in_sample")) {
      return getTasksFailedInSample();
    }
    throw new IllegalStateException("Invalid field name: " + fieldName);
  }

  public Object getField(_Fields field) {
    switch (field) {
      case step_attempt_id:
        return getStepAttemptId();
      case job_identifier:
        return getJobIdentifier();
      case job_name:
        return getJobName();
      case tracking_url:
        return getTrackingUrl();
      case avg_map_duration:
        return getAvgMapDuration();
      case median_map_duration:
        return getMedianMapDuration();
      case max_map_duration:
        return getMaxMapDuration();
      case min_map_duration:
        return getMinMapDuration();
      case stdev_map_duration:
        return getStdevMapDuration();
      case avg_reduce_duration:
        return getAvgReduceDuration();
      case median_reduce_duration:
        return getMedianReduceDuration();
      case max_reduce_duration:
        return getMaxReduceDuration();
      case min_reduce_duration:
        return getMinReduceDuration();
      case stdev_reduce_duration:
        return getStdevReduceDuration();
      case tasks_sampled:
        return getTasksSampled();
      case tasks_failed_in_sample:
        return getTasksFailedInSample();
    }
    throw new IllegalStateException("Invalid field: " + field);
  }

  public boolean hasField(String fieldName) {
    if (fieldName.equals("id")) {
      return true;
    }
    if (fieldName.equals("step_attempt_id")) {
      return true;
    }
    if (fieldName.equals("job_identifier")) {
      return true;
    }
    if (fieldName.equals("job_name")) {
      return true;
    }
    if (fieldName.equals("tracking_url")) {
      return true;
    }
    if (fieldName.equals("avg_map_duration")) {
      return true;
    }
    if (fieldName.equals("median_map_duration")) {
      return true;
    }
    if (fieldName.equals("max_map_duration")) {
      return true;
    }
    if (fieldName.equals("min_map_duration")) {
      return true;
    }
    if (fieldName.equals("stdev_map_duration")) {
      return true;
    }
    if (fieldName.equals("avg_reduce_duration")) {
      return true;
    }
    if (fieldName.equals("median_reduce_duration")) {
      return true;
    }
    if (fieldName.equals("max_reduce_duration")) {
      return true;
    }
    if (fieldName.equals("min_reduce_duration")) {
      return true;
    }
    if (fieldName.equals("stdev_reduce_duration")) {
      return true;
    }
    if (fieldName.equals("tasks_sampled")) {
      return true;
    }
    if (fieldName.equals("tasks_failed_in_sample")) {
      return true;
    }
    return false;
  }

  public static Object getDefaultValue(_Fields field) {
    switch (field) {
      case step_attempt_id:
        return null;
      case job_identifier:
        return null;
      case job_name:
        return null;
      case tracking_url:
        return null;
      case avg_map_duration:
        return null;
      case median_map_duration:
        return null;
      case max_map_duration:
        return null;
      case min_map_duration:
        return null;
      case stdev_map_duration:
        return null;
      case avg_reduce_duration:
        return null;
      case median_reduce_duration:
        return null;
      case max_reduce_duration:
        return null;
      case min_reduce_duration:
        return null;
      case stdev_reduce_duration:
        return null;
      case tasks_sampled:
        return null;
      case tasks_failed_in_sample:
        return null;
    }
    throw new IllegalStateException("Invalid field: " + field);
  }

  @Override
  public Set<Enum> getFieldSet() {
    Set set = EnumSet.allOf(_Fields.class);
    return set;
  }

  @Override
  public MapreduceJob getCopy() {
    return getCopy(databases);
  }

  @Override
  public MapreduceJob getCopy(IDatabases databases) {
    return new MapreduceJob(this, databases);
  }

  @Override
  public boolean save() throws IOException {
    return databases.getWorkflowDb().mapreduceJobs().save(this);
  }

  public StepAttempt createStepAttempt(final int workflow_attempt_id, final String step_token, final int step_status, final String action_class) throws IOException {
 
    StepAttempt newStepAttempt = databases.getWorkflowDb().stepAttempts().create(workflow_attempt_id, step_token, step_status, action_class);
    setStepAttemptId(newStepAttempt.getId());
    save();
    __assoc_step_attempt.clearCache();
    return newStepAttempt;
  }

  public StepAttempt createStepAttempt(final int workflow_attempt_id, final String step_token, final Long start_time, final Long end_time, final int step_status, final String failure_cause, final String failure_trace, final String action_class, final String status_message) throws IOException {
 
    StepAttempt newStepAttempt = databases.getWorkflowDb().stepAttempts().create(workflow_attempt_id, step_token, start_time, end_time, step_status, failure_cause, failure_trace, action_class, status_message);
    setStepAttemptId(newStepAttempt.getId());
    save();
    __assoc_step_attempt.clearCache();
    return newStepAttempt;
  }

  public StepAttempt createStepAttempt() throws IOException {
 
    StepAttempt newStepAttempt = databases.getWorkflowDb().stepAttempts().create(0, "", 0, "");
    setStepAttemptId(newStepAttempt.getId());
    save();
    __assoc_step_attempt.clearCache();
    return newStepAttempt;
  }

  public String toString() {
    return "<MapreduceJob"
        + " id: " + this.getId()
        + " step_attempt_id: " + getStepAttemptId()
        + " job_identifier: " + getJobIdentifier()
        + " job_name: " + getJobName()
        + " tracking_url: " + getTrackingUrl()
        + " avg_map_duration: " + getAvgMapDuration()
        + " median_map_duration: " + getMedianMapDuration()
        + " max_map_duration: " + getMaxMapDuration()
        + " min_map_duration: " + getMinMapDuration()
        + " stdev_map_duration: " + getStdevMapDuration()
        + " avg_reduce_duration: " + getAvgReduceDuration()
        + " median_reduce_duration: " + getMedianReduceDuration()
        + " max_reduce_duration: " + getMaxReduceDuration()
        + " min_reduce_duration: " + getMinReduceDuration()
        + " stdev_reduce_duration: " + getStdevReduceDuration()
        + " tasks_sampled: " + getTasksSampled()
        + " tasks_failed_in_sample: " + getTasksFailedInSample()
        + ">";
  }

  public void unsetAssociations() {
    unsetDatabaseReference();
    __assoc_step_attempt = null;
    __assoc_mapreduce_counters = null;
    __assoc_mapreduce_job_task_exceptions = null;
    __assoc_workflow_alert_mapreduce_job = null;
  }

  public int compareTo(MapreduceJob that) {
    return Long.valueOf(this.getId()).compareTo(that.getId());
  }
  
  
  public static class Attributes extends AttributesWithId {
    
    public static final long serialVersionUID = -8951452087436357286L;

    // Fields
    private Long __step_attempt_id;
    private String __job_identifier;
    private String __job_name;
    private String __tracking_url;
    private Long __avg_map_duration;
    private Long __median_map_duration;
    private Long __max_map_duration;
    private Long __min_map_duration;
    private Long __stdev_map_duration;
    private Long __avg_reduce_duration;
    private Long __median_reduce_duration;
    private Long __max_reduce_duration;
    private Long __min_reduce_duration;
    private Long __stdev_reduce_duration;
    private Integer __tasks_sampled;
    private Integer __tasks_failed_in_sample;

    public Attributes(long id) {
      super(id);
    }

    public Attributes(long id, final Long step_attempt_id, final String job_identifier, final String job_name, final String tracking_url, final Long avg_map_duration, final Long median_map_duration, final Long max_map_duration, final Long min_map_duration, final Long stdev_map_duration, final Long avg_reduce_duration, final Long median_reduce_duration, final Long max_reduce_duration, final Long min_reduce_duration, final Long stdev_reduce_duration, final Integer tasks_sampled, final Integer tasks_failed_in_sample) {
      super(id);
      this.__step_attempt_id = step_attempt_id;
      this.__job_identifier = job_identifier;
      this.__job_name = job_name;
      this.__tracking_url = tracking_url;
      this.__avg_map_duration = avg_map_duration;
      this.__median_map_duration = median_map_duration;
      this.__max_map_duration = max_map_duration;
      this.__min_map_duration = min_map_duration;
      this.__stdev_map_duration = stdev_map_duration;
      this.__avg_reduce_duration = avg_reduce_duration;
      this.__median_reduce_duration = median_reduce_duration;
      this.__max_reduce_duration = max_reduce_duration;
      this.__min_reduce_duration = min_reduce_duration;
      this.__stdev_reduce_duration = stdev_reduce_duration;
      this.__tasks_sampled = tasks_sampled;
      this.__tasks_failed_in_sample = tasks_failed_in_sample;
    }
    
    public Attributes(long id, final String job_identifier, final String job_name, final String tracking_url) {
      super(id);
      this.__job_identifier = job_identifier;
      this.__job_name = job_name;
      this.__tracking_url = tracking_url;
    }

    public static Attributes newDefaultInstance(long id) {
      return new Attributes(id, "", "", "");
    }

    public Attributes(long id, Map<Enum, Object> fieldsMap) {
      super(id);
      Long step_attempt_id = (Long)fieldsMap.get(MapreduceJob._Fields.step_attempt_id);
      String job_identifier = (String)fieldsMap.get(MapreduceJob._Fields.job_identifier);
      String job_name = (String)fieldsMap.get(MapreduceJob._Fields.job_name);
      String tracking_url = (String)fieldsMap.get(MapreduceJob._Fields.tracking_url);
      Long avg_map_duration = (Long)fieldsMap.get(MapreduceJob._Fields.avg_map_duration);
      Long median_map_duration = (Long)fieldsMap.get(MapreduceJob._Fields.median_map_duration);
      Long max_map_duration = (Long)fieldsMap.get(MapreduceJob._Fields.max_map_duration);
      Long min_map_duration = (Long)fieldsMap.get(MapreduceJob._Fields.min_map_duration);
      Long stdev_map_duration = (Long)fieldsMap.get(MapreduceJob._Fields.stdev_map_duration);
      Long avg_reduce_duration = (Long)fieldsMap.get(MapreduceJob._Fields.avg_reduce_duration);
      Long median_reduce_duration = (Long)fieldsMap.get(MapreduceJob._Fields.median_reduce_duration);
      Long max_reduce_duration = (Long)fieldsMap.get(MapreduceJob._Fields.max_reduce_duration);
      Long min_reduce_duration = (Long)fieldsMap.get(MapreduceJob._Fields.min_reduce_duration);
      Long stdev_reduce_duration = (Long)fieldsMap.get(MapreduceJob._Fields.stdev_reduce_duration);
      Integer tasks_sampled = (Integer)fieldsMap.get(MapreduceJob._Fields.tasks_sampled);
      Integer tasks_failed_in_sample = (Integer)fieldsMap.get(MapreduceJob._Fields.tasks_failed_in_sample);
      this.__step_attempt_id = step_attempt_id;
      this.__job_identifier = job_identifier;
      this.__job_name = job_name;
      this.__tracking_url = tracking_url;
      this.__avg_map_duration = avg_map_duration;
      this.__median_map_duration = median_map_duration;
      this.__max_map_duration = max_map_duration;
      this.__min_map_duration = min_map_duration;
      this.__stdev_map_duration = stdev_map_duration;
      this.__avg_reduce_duration = avg_reduce_duration;
      this.__median_reduce_duration = median_reduce_duration;
      this.__max_reduce_duration = max_reduce_duration;
      this.__min_reduce_duration = min_reduce_duration;
      this.__stdev_reduce_duration = stdev_reduce_duration;
      this.__tasks_sampled = tasks_sampled;
      this.__tasks_failed_in_sample = tasks_failed_in_sample;
    }

    public Attributes(Attributes other) {
      super(other.getId());
      this.__step_attempt_id = other.getStepAttemptId();
      this.__job_identifier = other.getJobIdentifier();
      this.__job_name = other.getJobName();
      this.__tracking_url = other.getTrackingUrl();
      this.__avg_map_duration = other.getAvgMapDuration();
      this.__median_map_duration = other.getMedianMapDuration();
      this.__max_map_duration = other.getMaxMapDuration();
      this.__min_map_duration = other.getMinMapDuration();
      this.__stdev_map_duration = other.getStdevMapDuration();
      this.__avg_reduce_duration = other.getAvgReduceDuration();
      this.__median_reduce_duration = other.getMedianReduceDuration();
      this.__max_reduce_duration = other.getMaxReduceDuration();
      this.__min_reduce_duration = other.getMinReduceDuration();
      this.__stdev_reduce_duration = other.getStdevReduceDuration();
      this.__tasks_sampled = other.getTasksSampled();
      this.__tasks_failed_in_sample = other.getTasksFailedInSample();
    }

    public Long getStepAttemptId() {
      return __step_attempt_id;
    }

    public Attributes setStepAttemptId(Long newval) {
      this.__step_attempt_id = newval;
      cachedHashCode = 0;
      return this;
    }

    public String getJobIdentifier() {
      return __job_identifier;
    }

    public Attributes setJobIdentifier(String newval) {
      this.__job_identifier = newval;
      cachedHashCode = 0;
      return this;
    }

    public String getJobName() {
      return __job_name;
    }

    public Attributes setJobName(String newval) {
      this.__job_name = newval;
      cachedHashCode = 0;
      return this;
    }

    public String getTrackingUrl() {
      return __tracking_url;
    }

    public Attributes setTrackingUrl(String newval) {
      this.__tracking_url = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getAvgMapDuration() {
      return __avg_map_duration;
    }

    public Attributes setAvgMapDuration(Long newval) {
      this.__avg_map_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getMedianMapDuration() {
      return __median_map_duration;
    }

    public Attributes setMedianMapDuration(Long newval) {
      this.__median_map_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getMaxMapDuration() {
      return __max_map_duration;
    }

    public Attributes setMaxMapDuration(Long newval) {
      this.__max_map_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getMinMapDuration() {
      return __min_map_duration;
    }

    public Attributes setMinMapDuration(Long newval) {
      this.__min_map_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getStdevMapDuration() {
      return __stdev_map_duration;
    }

    public Attributes setStdevMapDuration(Long newval) {
      this.__stdev_map_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getAvgReduceDuration() {
      return __avg_reduce_duration;
    }

    public Attributes setAvgReduceDuration(Long newval) {
      this.__avg_reduce_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getMedianReduceDuration() {
      return __median_reduce_duration;
    }

    public Attributes setMedianReduceDuration(Long newval) {
      this.__median_reduce_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getMaxReduceDuration() {
      return __max_reduce_duration;
    }

    public Attributes setMaxReduceDuration(Long newval) {
      this.__max_reduce_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getMinReduceDuration() {
      return __min_reduce_duration;
    }

    public Attributes setMinReduceDuration(Long newval) {
      this.__min_reduce_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Long getStdevReduceDuration() {
      return __stdev_reduce_duration;
    }

    public Attributes setStdevReduceDuration(Long newval) {
      this.__stdev_reduce_duration = newval;
      cachedHashCode = 0;
      return this;
    }

    public Integer getTasksSampled() {
      return __tasks_sampled;
    }

    public Attributes setTasksSampled(Integer newval) {
      this.__tasks_sampled = newval;
      cachedHashCode = 0;
      return this;
    }

    public Integer getTasksFailedInSample() {
      return __tasks_failed_in_sample;
    }

    public Attributes setTasksFailedInSample(Integer newval) {
      this.__tasks_failed_in_sample = newval;
      cachedHashCode = 0;
      return this;
    }

    public void setField(_Fields field, Object value) {
      switch (field) {
        case step_attempt_id:
          setStepAttemptId((Long)value);
          break;
        case job_identifier:
          setJobIdentifier((String)value);
          break;
        case job_name:
          setJobName((String)value);
          break;
        case tracking_url:
          setTrackingUrl((String)value);
          break;
        case avg_map_duration:
          setAvgMapDuration((Long)value);
          break;
        case median_map_duration:
          setMedianMapDuration((Long)value);
          break;
        case max_map_duration:
          setMaxMapDuration((Long)value);
          break;
        case min_map_duration:
          setMinMapDuration((Long)value);
          break;
        case stdev_map_duration:
          setStdevMapDuration((Long)value);
          break;
        case avg_reduce_duration:
          setAvgReduceDuration((Long)value);
          break;
        case median_reduce_duration:
          setMedianReduceDuration((Long)value);
          break;
        case max_reduce_duration:
          setMaxReduceDuration((Long)value);
          break;
        case min_reduce_duration:
          setMinReduceDuration((Long)value);
          break;
        case stdev_reduce_duration:
          setStdevReduceDuration((Long)value);
          break;
        case tasks_sampled:
          setTasksSampled((Integer)value);
          break;
        case tasks_failed_in_sample:
          setTasksFailedInSample((Integer)value);
          break;
        default:
          throw new IllegalStateException("Invalid field: " + field);
      }
    }

    public void setField(String fieldName, Object value) {
      if (fieldName.equals("step_attempt_id")) {
        setStepAttemptId((Long)value);
        return;
      }
      if (fieldName.equals("job_identifier")) {
        setJobIdentifier((String)value);
        return;
      }
      if (fieldName.equals("job_name")) {
        setJobName((String)value);
        return;
      }
      if (fieldName.equals("tracking_url")) {
        setTrackingUrl((String)value);
        return;
      }
      if (fieldName.equals("avg_map_duration")) {
        setAvgMapDuration((Long)value);
        return;
      }
      if (fieldName.equals("median_map_duration")) {
        setMedianMapDuration((Long)value);
        return;
      }
      if (fieldName.equals("max_map_duration")) {
        setMaxMapDuration((Long)value);
        return;
      }
      if (fieldName.equals("min_map_duration")) {
        setMinMapDuration((Long)value);
        return;
      }
      if (fieldName.equals("stdev_map_duration")) {
        setStdevMapDuration((Long)value);
        return;
      }
      if (fieldName.equals("avg_reduce_duration")) {
        setAvgReduceDuration((Long)value);
        return;
      }
      if (fieldName.equals("median_reduce_duration")) {
        setMedianReduceDuration((Long)value);
        return;
      }
      if (fieldName.equals("max_reduce_duration")) {
        setMaxReduceDuration((Long)value);
        return;
      }
      if (fieldName.equals("min_reduce_duration")) {
        setMinReduceDuration((Long)value);
        return;
      }
      if (fieldName.equals("stdev_reduce_duration")) {
        setStdevReduceDuration((Long)value);
        return;
      }
      if (fieldName.equals("tasks_sampled")) {
        setTasksSampled((Integer)value);
        return;
      }
      if (fieldName.equals("tasks_failed_in_sample")) {
        setTasksFailedInSample((Integer)value);
        return;
      }
      throw new IllegalStateException("Invalid field: " + fieldName);
    }

    public static Class getFieldType(_Fields field) {
      switch (field) {
        case step_attempt_id:
          return Long.class;
        case job_identifier:
          return String.class;
        case job_name:
          return String.class;
        case tracking_url:
          return String.class;
        case avg_map_duration:
          return Long.class;
        case median_map_duration:
          return Long.class;
        case max_map_duration:
          return Long.class;
        case min_map_duration:
          return Long.class;
        case stdev_map_duration:
          return Long.class;
        case avg_reduce_duration:
          return Long.class;
        case median_reduce_duration:
          return Long.class;
        case max_reduce_duration:
          return Long.class;
        case min_reduce_duration:
          return Long.class;
        case stdev_reduce_duration:
          return Long.class;
        case tasks_sampled:
          return Integer.class;
        case tasks_failed_in_sample:
          return Integer.class;
        default:
          throw new IllegalStateException("Invalid field: " + field);
      }    
    }

    public static Class getFieldType(String fieldName) {    
      if (fieldName.equals("step_attempt_id")) {
        return Long.class;
      }
      if (fieldName.equals("job_identifier")) {
        return String.class;
      }
      if (fieldName.equals("job_name")) {
        return String.class;
      }
      if (fieldName.equals("tracking_url")) {
        return String.class;
      }
      if (fieldName.equals("avg_map_duration")) {
        return Long.class;
      }
      if (fieldName.equals("median_map_duration")) {
        return Long.class;
      }
      if (fieldName.equals("max_map_duration")) {
        return Long.class;
      }
      if (fieldName.equals("min_map_duration")) {
        return Long.class;
      }
      if (fieldName.equals("stdev_map_duration")) {
        return Long.class;
      }
      if (fieldName.equals("avg_reduce_duration")) {
        return Long.class;
      }
      if (fieldName.equals("median_reduce_duration")) {
        return Long.class;
      }
      if (fieldName.equals("max_reduce_duration")) {
        return Long.class;
      }
      if (fieldName.equals("min_reduce_duration")) {
        return Long.class;
      }
      if (fieldName.equals("stdev_reduce_duration")) {
        return Long.class;
      }
      if (fieldName.equals("tasks_sampled")) {
        return Integer.class;
      }
      if (fieldName.equals("tasks_failed_in_sample")) {
        return Integer.class;
      }
      throw new IllegalStateException("Invalid field name: " + fieldName);
    }

    @Override
    public Object getField(String fieldName) {
      if (fieldName.equals("id")) {
        return getId();
      }
      if (fieldName.equals("step_attempt_id")) {
        return getStepAttemptId();
      }
      if (fieldName.equals("job_identifier")) {
        return getJobIdentifier();
      }
      if (fieldName.equals("job_name")) {
        return getJobName();
      }
      if (fieldName.equals("tracking_url")) {
        return getTrackingUrl();
      }
      if (fieldName.equals("avg_map_duration")) {
        return getAvgMapDuration();
      }
      if (fieldName.equals("median_map_duration")) {
        return getMedianMapDuration();
      }
      if (fieldName.equals("max_map_duration")) {
        return getMaxMapDuration();
      }
      if (fieldName.equals("min_map_duration")) {
        return getMinMapDuration();
      }
      if (fieldName.equals("stdev_map_duration")) {
        return getStdevMapDuration();
      }
      if (fieldName.equals("avg_reduce_duration")) {
        return getAvgReduceDuration();
      }
      if (fieldName.equals("median_reduce_duration")) {
        return getMedianReduceDuration();
      }
      if (fieldName.equals("max_reduce_duration")) {
        return getMaxReduceDuration();
      }
      if (fieldName.equals("min_reduce_duration")) {
        return getMinReduceDuration();
      }
      if (fieldName.equals("stdev_reduce_duration")) {
        return getStdevReduceDuration();
      }
      if (fieldName.equals("tasks_sampled")) {
        return getTasksSampled();
      }
      if (fieldName.equals("tasks_failed_in_sample")) {
        return getTasksFailedInSample();
      }
      throw new IllegalStateException("Invalid field name: " + fieldName);
    }

    public Object getField(_Fields field) {
      switch (field) {
        case step_attempt_id:
          return getStepAttemptId();
        case job_identifier:
          return getJobIdentifier();
        case job_name:
          return getJobName();
        case tracking_url:
          return getTrackingUrl();
        case avg_map_duration:
          return getAvgMapDuration();
        case median_map_duration:
          return getMedianMapDuration();
        case max_map_duration:
          return getMaxMapDuration();
        case min_map_duration:
          return getMinMapDuration();
        case stdev_map_duration:
          return getStdevMapDuration();
        case avg_reduce_duration:
          return getAvgReduceDuration();
        case median_reduce_duration:
          return getMedianReduceDuration();
        case max_reduce_duration:
          return getMaxReduceDuration();
        case min_reduce_duration:
          return getMinReduceDuration();
        case stdev_reduce_duration:
          return getStdevReduceDuration();
        case tasks_sampled:
          return getTasksSampled();
        case tasks_failed_in_sample:
          return getTasksFailedInSample();
      }
      throw new IllegalStateException("Invalid field: " + field);
    }

    public boolean hasField(String fieldName) {
      if (fieldName.equals("id")) {
        return true;
      }
      if (fieldName.equals("step_attempt_id")) {
        return true;
      }
      if (fieldName.equals("job_identifier")) {
        return true;
      }
      if (fieldName.equals("job_name")) {
        return true;
      }
      if (fieldName.equals("tracking_url")) {
        return true;
      }
      if (fieldName.equals("avg_map_duration")) {
        return true;
      }
      if (fieldName.equals("median_map_duration")) {
        return true;
      }
      if (fieldName.equals("max_map_duration")) {
        return true;
      }
      if (fieldName.equals("min_map_duration")) {
        return true;
      }
      if (fieldName.equals("stdev_map_duration")) {
        return true;
      }
      if (fieldName.equals("avg_reduce_duration")) {
        return true;
      }
      if (fieldName.equals("median_reduce_duration")) {
        return true;
      }
      if (fieldName.equals("max_reduce_duration")) {
        return true;
      }
      if (fieldName.equals("min_reduce_duration")) {
        return true;
      }
      if (fieldName.equals("stdev_reduce_duration")) {
        return true;
      }
      if (fieldName.equals("tasks_sampled")) {
        return true;
      }
      if (fieldName.equals("tasks_failed_in_sample")) {
        return true;
      }
      return false;
    }

    public static Object getDefaultValue(_Fields field) {
      switch (field) {
        case step_attempt_id:
          return null;
        case job_identifier:
          return null;
        case job_name:
          return null;
        case tracking_url:
          return null;
        case avg_map_duration:
          return null;
        case median_map_duration:
          return null;
        case max_map_duration:
          return null;
        case min_map_duration:
          return null;
        case stdev_map_duration:
          return null;
        case avg_reduce_duration:
          return null;
        case median_reduce_duration:
          return null;
        case max_reduce_duration:
          return null;
        case min_reduce_duration:
          return null;
        case stdev_reduce_duration:
          return null;
        case tasks_sampled:
          return null;
        case tasks_failed_in_sample:
          return null;
      }
      throw new IllegalStateException("Invalid field: " + field);
    }
    
    @Override
    public Set<Enum> getFieldSet() {
      Set set = EnumSet.allOf(_Fields.class);
      return set;
    }
    
    public String toString() {
      return "<MapreduceJob.Attributes"
          + " step_attempt_id: " + getStepAttemptId()
          + " job_identifier: " + getJobIdentifier()
          + " job_name: " + getJobName()
          + " tracking_url: " + getTrackingUrl()
          + " avg_map_duration: " + getAvgMapDuration()
          + " median_map_duration: " + getMedianMapDuration()
          + " max_map_duration: " + getMaxMapDuration()
          + " min_map_duration: " + getMinMapDuration()
          + " stdev_map_duration: " + getStdevMapDuration()
          + " avg_reduce_duration: " + getAvgReduceDuration()
          + " median_reduce_duration: " + getMedianReduceDuration()
          + " max_reduce_duration: " + getMaxReduceDuration()
          + " min_reduce_duration: " + getMinReduceDuration()
          + " stdev_reduce_duration: " + getStdevReduceDuration()
          + " tasks_sampled: " + getTasksSampled()
          + " tasks_failed_in_sample: " + getTasksFailedInSample()
          + ">";
    }
  }

  public static class Id implements ModelIdWrapper<MapreduceJob.Id> {
    public static final long serialVersionUID = 1L;

    private final long id;

    public Id(Long id) {
      this.id = id;
    }

    @Override
    public Long getId() {
      return id;
    }

    @Override
    public int compareTo(Id other) {
      return this.getId().compareTo(other.getId());
    }

    @Override
    public boolean equals(Object other) {
      if (other instanceof Id) {
        return this.getId().equals(((Id)other).getId());
      }
      return false;
    }

    @Override
    public int hashCode() {
      return this.getId().hashCode();
    }

    @Override
    public String toString() {
      return "<MapreduceJob.Id: " + this.getId() + ">";
    }
  }

  public static Set<Attributes> convertToAttributesSet(Collection<MapreduceJob> models) {
    return models.stream()
        .map(MapreduceJob::getAttributes)
        .collect(Collectors.toSet());
  }

  public static class AssociationMetadata implements IModelAssociationMetadata {

    private List<IAssociationMetadata> meta = new ArrayList<>();

    public AssociationMetadata(){
      meta.add(new DefaultAssociationMetadata(AssociationType.BELONGS_TO, MapreduceJob.class, StepAttempt.class, "step_attempt_id"));
      meta.add(new DefaultAssociationMetadata(AssociationType.HAS_MANY, MapreduceJob.class, MapreduceCounter.class, "mapreduce_job_id"));
      meta.add(new DefaultAssociationMetadata(AssociationType.HAS_MANY, MapreduceJob.class, MapreduceJobTaskException.class, "mapreduce_job_id"));
      meta.add(new DefaultAssociationMetadata(AssociationType.HAS_MANY, MapreduceJob.class, WorkflowAlertMapreduceJob.class, "mapreduce_job_id"));
    }

    @Override
    public List<IAssociationMetadata> getAssociationMetadata() {
      return meta;
    }
  }

}
