/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractQueryBuilder;
import com.rapleaf.jack.queries.Column;
import com.rapleaf.jack.queries.FieldSelector;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.rapleaf.jack.queries.QueryOrder;
import com.rapleaf.jack.queries.OrderCriterion;
import com.rapleaf.jack.queries.LimitCriterion;
import com.liveramp.databases.workflow_db.iface.IExecutionTagPersistence;
import com.liveramp.databases.workflow_db.models.ExecutionTag;


public class ExecutionTagQueryBuilder extends AbstractQueryBuilder<ExecutionTag> {

  public ExecutionTagQueryBuilder(IExecutionTagPersistence caller) {
    super(caller);
  }

  public ExecutionTagQueryBuilder select(ExecutionTag._Fields... fields) {
    for (ExecutionTag._Fields field : fields){
      addSelectedField(new FieldSelector(field));
    }
    return this;
  }

  public ExecutionTagQueryBuilder selectAgg(FieldSelector... aggregatedFields) {
    addSelectedFields(aggregatedFields);
    return this;
  }

  public ExecutionTagQueryBuilder id(Long value) {
    addId(value);
    return this;
  }

  public ExecutionTagQueryBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public ExecutionTagQueryBuilder whereId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(Column.fromId(null), operator, null));
    return this;
  }

  public ExecutionTagQueryBuilder limit(int offset, int nResults) {
    setLimit(new LimitCriterion(offset, nResults));
    return this;
  }

  public ExecutionTagQueryBuilder limit(int nResults) {
    setLimit(new LimitCriterion(nResults));
    return this;
  }

  public ExecutionTagQueryBuilder groupBy(ExecutionTag._Fields... fields) {
    addGroupByFields(fields);
    return this;
  }

  public ExecutionTagQueryBuilder order() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public ExecutionTagQueryBuilder order(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public ExecutionTagQueryBuilder orderById() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public ExecutionTagQueryBuilder orderById(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public ExecutionTagQueryBuilder workflowExecutionId(Long value) {
    addWhereConstraint(new WhereConstraint<>(ExecutionTag._Fields.workflow_execution_id, JackMatchers.equalTo(value)));
    return this;
  }

  public ExecutionTagQueryBuilder whereWorkflowExecutionId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(ExecutionTag._Fields.workflow_execution_id, operator));
    return this;
  }

  public ExecutionTagQueryBuilder orderByWorkflowExecutionId() {
    this.addOrder(new OrderCriterion(ExecutionTag._Fields.workflow_execution_id, QueryOrder.ASC));
    return this;
  }

  public ExecutionTagQueryBuilder orderByWorkflowExecutionId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ExecutionTag._Fields.workflow_execution_id, queryOrder));
    return this;
  }

  public ExecutionTagQueryBuilder tag(String value) {
    addWhereConstraint(new WhereConstraint<>(ExecutionTag._Fields.tag, JackMatchers.equalTo(value)));
    return this;
  }

  public ExecutionTagQueryBuilder whereTag(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<>(ExecutionTag._Fields.tag, operator));
    return this;
  }

  public ExecutionTagQueryBuilder orderByTag() {
    this.addOrder(new OrderCriterion(ExecutionTag._Fields.tag, QueryOrder.ASC));
    return this;
  }

  public ExecutionTagQueryBuilder orderByTag(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ExecutionTag._Fields.tag, queryOrder));
    return this;
  }

  public ExecutionTagQueryBuilder value(String value) {
    addWhereConstraint(new WhereConstraint<>(ExecutionTag._Fields.value, JackMatchers.equalTo(value)));
    return this;
  }

  public ExecutionTagQueryBuilder whereValue(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<>(ExecutionTag._Fields.value, operator));
    return this;
  }

  public ExecutionTagQueryBuilder orderByValue() {
    this.addOrder(new OrderCriterion(ExecutionTag._Fields.value, QueryOrder.ASC));
    return this;
  }

  public ExecutionTagQueryBuilder orderByValue(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ExecutionTag._Fields.value, queryOrder));
    return this;
  }
}
