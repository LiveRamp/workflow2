
/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db;

import java.io.IOException;
import java.sql.SQLException;

import com.rapleaf.jack.DbFixtures;
import com.liveramp.databases.workflow_db.DatabasesImpl;
import com.liveramp.databases.workflow_db.IDatabases;

public class BaseWorkflowDbFixtures extends DbFixtures {

  public static void setup() throws SQLException, IOException {
    setup(new DatabasesImpl());
  }

  public static void setup(IDatabases databases) throws SQLException, IOException {
    databases.getWorkflowDb().applicationConfiguredNotifications().deleteAll();
    databases.getWorkflowDb().applicationCounterSummaries().deleteAll();
    databases.getWorkflowDb().applications().deleteAll();
    databases.getWorkflowDb().backgroundAttemptInfos().deleteAll();
    databases.getWorkflowDb().backgroundStepAttemptInfos().deleteAll();
    databases.getWorkflowDb().backgroundWorkflowExecutorInfos().deleteAll();
    databases.getWorkflowDb().configuredNotifications().deleteAll();
    databases.getWorkflowDb().dashboardApplications().deleteAll();
    databases.getWorkflowDb().dashboards().deleteAll();
    databases.getWorkflowDb().executionTags().deleteAll();
    databases.getWorkflowDb().mapreduceCounters().deleteAll();
    databases.getWorkflowDb().mapreduceJobTaskExceptions().deleteAll();
    databases.getWorkflowDb().mapreduceJobs().deleteAll();
    databases.getWorkflowDb().resourceRecords().deleteAll();
    databases.getWorkflowDb().resourceRoots().deleteAll();
    databases.getWorkflowDb().stepAttemptDatastores().deleteAll();
    databases.getWorkflowDb().stepAttempts().deleteAll();
    databases.getWorkflowDb().stepDependencies().deleteAll();
    databases.getWorkflowDb().stepStatistics().deleteAll();
    databases.getWorkflowDb().userDashboards().deleteAll();
    databases.getWorkflowDb().users().deleteAll();
    databases.getWorkflowDb().workflowAlertMapreduceJobs().deleteAll();
    databases.getWorkflowDb().workflowAlertWorkflowExecutions().deleteAll();
    databases.getWorkflowDb().workflowAlerts().deleteAll();
    databases.getWorkflowDb().workflowAttemptConfiguredNotifications().deleteAll();
    databases.getWorkflowDb().workflowAttemptDatastores().deleteAll();
    databases.getWorkflowDb().workflowAttempts().deleteAll();
    databases.getWorkflowDb().workflowExecutionConfiguredNotifications().deleteAll();
    databases.getWorkflowDb().workflowExecutions().deleteAll();
  }
}
