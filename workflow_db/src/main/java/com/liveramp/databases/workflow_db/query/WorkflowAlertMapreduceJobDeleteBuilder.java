/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractDeleteBuilder;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.liveramp.databases.workflow_db.iface.IWorkflowAlertMapreduceJobPersistence;
import com.liveramp.databases.workflow_db.models.WorkflowAlertMapreduceJob;


public class WorkflowAlertMapreduceJobDeleteBuilder extends AbstractDeleteBuilder<WorkflowAlertMapreduceJob> {

  public WorkflowAlertMapreduceJobDeleteBuilder(IWorkflowAlertMapreduceJobPersistence caller) {
    super(caller);
  }

  public WorkflowAlertMapreduceJobDeleteBuilder id(Long value) {
    addId(value);
    return this;
  }

  public WorkflowAlertMapreduceJobDeleteBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public WorkflowAlertMapreduceJobDeleteBuilder workflowAlertId(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowAlertMapreduceJob._Fields.workflow_alert_id, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowAlertMapreduceJobDeleteBuilder whereWorkflowAlertId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowAlertMapreduceJob._Fields.workflow_alert_id, operator));
    return this;
  }

  public WorkflowAlertMapreduceJobDeleteBuilder mapreduceJobId(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowAlertMapreduceJob._Fields.mapreduce_job_id, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowAlertMapreduceJobDeleteBuilder whereMapreduceJobId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(WorkflowAlertMapreduceJob._Fields.mapreduce_job_id, operator));
    return this;
  }
}
