/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractDeleteBuilder;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.liveramp.databases.workflow_db.iface.IResourceRootPersistence;
import com.liveramp.databases.workflow_db.models.ResourceRoot;


public class ResourceRootDeleteBuilder extends AbstractDeleteBuilder<ResourceRoot> {

  public ResourceRootDeleteBuilder(IResourceRootPersistence caller) {
    super(caller);
  }

  public ResourceRootDeleteBuilder id(Long value) {
    addId(value);
    return this;
  }

  public ResourceRootDeleteBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public ResourceRootDeleteBuilder name(String value) {
    addWhereConstraint(new WhereConstraint<String>(ResourceRoot._Fields.name, JackMatchers.equalTo(value)));
    return this;
  }

  public ResourceRootDeleteBuilder whereName(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(ResourceRoot._Fields.name, operator));
    return this;
  }

  public ResourceRootDeleteBuilder createdAt(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(ResourceRoot._Fields.created_at, JackMatchers.equalTo(value)));
    return this;
  }

  public ResourceRootDeleteBuilder whereCreatedAt(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(ResourceRoot._Fields.created_at, operator));
    return this;
  }

  public ResourceRootDeleteBuilder updatedAt(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(ResourceRoot._Fields.updated_at, JackMatchers.equalTo(value)));
    return this;
  }

  public ResourceRootDeleteBuilder whereUpdatedAt(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(ResourceRoot._Fields.updated_at, operator));
    return this;
  }

  public ResourceRootDeleteBuilder scopeIdentifier(String value) {
    addWhereConstraint(new WhereConstraint<String>(ResourceRoot._Fields.scope_identifier, JackMatchers.equalTo(value)));
    return this;
  }

  public ResourceRootDeleteBuilder whereScopeIdentifier(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(ResourceRoot._Fields.scope_identifier, operator));
    return this;
  }

  public ResourceRootDeleteBuilder version(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(ResourceRoot._Fields.version, JackMatchers.equalTo(value)));
    return this;
  }

  public ResourceRootDeleteBuilder whereVersion(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(ResourceRoot._Fields.version, operator));
    return this;
  }

  public ResourceRootDeleteBuilder versionType(String value) {
    addWhereConstraint(new WhereConstraint<String>(ResourceRoot._Fields.version_type, JackMatchers.equalTo(value)));
    return this;
  }

  public ResourceRootDeleteBuilder whereVersionType(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(ResourceRoot._Fields.version_type, operator));
    return this;
  }
}
