/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractQueryBuilder;
import com.rapleaf.jack.queries.Column;
import com.rapleaf.jack.queries.FieldSelector;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.rapleaf.jack.queries.QueryOrder;
import com.rapleaf.jack.queries.OrderCriterion;
import com.rapleaf.jack.queries.LimitCriterion;
import com.liveramp.databases.workflow_db.iface.IWorkflowAlertWorkflowExecutionPersistence;
import com.liveramp.databases.workflow_db.models.WorkflowAlertWorkflowExecution;


public class WorkflowAlertWorkflowExecutionQueryBuilder extends AbstractQueryBuilder<WorkflowAlertWorkflowExecution> {

  public WorkflowAlertWorkflowExecutionQueryBuilder(IWorkflowAlertWorkflowExecutionPersistence caller) {
    super(caller);
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder select(WorkflowAlertWorkflowExecution._Fields... fields) {
    for (WorkflowAlertWorkflowExecution._Fields field : fields){
      addSelectedField(new FieldSelector(field));
    }
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder selectAgg(FieldSelector... aggregatedFields) {
    addSelectedFields(aggregatedFields);
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder id(Long value) {
    addId(value);
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder whereId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(Column.fromId(null), operator, null));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder limit(int offset, int nResults) {
    setLimit(new LimitCriterion(offset, nResults));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder limit(int nResults) {
    setLimit(new LimitCriterion(nResults));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder groupBy(WorkflowAlertWorkflowExecution._Fields... fields) {
    addGroupByFields(fields);
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder order() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder order(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder orderById() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder orderById(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder workflowAlertId(Long value) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertWorkflowExecution._Fields.workflow_alert_id, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder whereWorkflowAlertId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertWorkflowExecution._Fields.workflow_alert_id, operator));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder orderByWorkflowAlertId() {
    this.addOrder(new OrderCriterion(WorkflowAlertWorkflowExecution._Fields.workflow_alert_id, QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder orderByWorkflowAlertId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(WorkflowAlertWorkflowExecution._Fields.workflow_alert_id, queryOrder));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder workflowExecutionId(Long value) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertWorkflowExecution._Fields.workflow_execution_id, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder whereWorkflowExecutionId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertWorkflowExecution._Fields.workflow_execution_id, operator));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder orderByWorkflowExecutionId() {
    this.addOrder(new OrderCriterion(WorkflowAlertWorkflowExecution._Fields.workflow_execution_id, QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertWorkflowExecutionQueryBuilder orderByWorkflowExecutionId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(WorkflowAlertWorkflowExecution._Fields.workflow_execution_id, queryOrder));
    return this;
  }
}
