/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractQueryBuilder;
import com.rapleaf.jack.queries.Column;
import com.rapleaf.jack.queries.FieldSelector;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.rapleaf.jack.queries.QueryOrder;
import com.rapleaf.jack.queries.OrderCriterion;
import com.rapleaf.jack.queries.LimitCriterion;
import com.liveramp.databases.workflow_db.iface.IApplicationConfiguredNotificationPersistence;
import com.liveramp.databases.workflow_db.models.ApplicationConfiguredNotification;


public class ApplicationConfiguredNotificationQueryBuilder extends AbstractQueryBuilder<ApplicationConfiguredNotification> {

  public ApplicationConfiguredNotificationQueryBuilder(IApplicationConfiguredNotificationPersistence caller) {
    super(caller);
  }

  public ApplicationConfiguredNotificationQueryBuilder select(ApplicationConfiguredNotification._Fields... fields) {
    for (ApplicationConfiguredNotification._Fields field : fields){
      addSelectedField(new FieldSelector(field));
    }
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder selectAgg(FieldSelector... aggregatedFields) {
    addSelectedFields(aggregatedFields);
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder id(Long value) {
    addId(value);
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder whereId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(Column.fromId(null), operator, null));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder limit(int offset, int nResults) {
    setLimit(new LimitCriterion(offset, nResults));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder limit(int nResults) {
    setLimit(new LimitCriterion(nResults));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder groupBy(ApplicationConfiguredNotification._Fields... fields) {
    addGroupByFields(fields);
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder order() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder order(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder orderById() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder orderById(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder applicationId(Long value) {
    addWhereConstraint(new WhereConstraint<>(ApplicationConfiguredNotification._Fields.application_id, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder whereApplicationId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(ApplicationConfiguredNotification._Fields.application_id, operator));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder orderByApplicationId() {
    this.addOrder(new OrderCriterion(ApplicationConfiguredNotification._Fields.application_id, QueryOrder.ASC));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder orderByApplicationId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ApplicationConfiguredNotification._Fields.application_id, queryOrder));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder configuredNotificationId(Long value) {
    addWhereConstraint(new WhereConstraint<>(ApplicationConfiguredNotification._Fields.configured_notification_id, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder whereConfiguredNotificationId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(ApplicationConfiguredNotification._Fields.configured_notification_id, operator));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder orderByConfiguredNotificationId() {
    this.addOrder(new OrderCriterion(ApplicationConfiguredNotification._Fields.configured_notification_id, QueryOrder.ASC));
    return this;
  }

  public ApplicationConfiguredNotificationQueryBuilder orderByConfiguredNotificationId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ApplicationConfiguredNotification._Fields.configured_notification_id, queryOrder));
    return this;
  }
}
