/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractDeleteBuilder;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.liveramp.databases.workflow_db.iface.IExecutionTagPersistence;
import com.liveramp.databases.workflow_db.models.ExecutionTag;


public class ExecutionTagDeleteBuilder extends AbstractDeleteBuilder<ExecutionTag> {

  public ExecutionTagDeleteBuilder(IExecutionTagPersistence caller) {
    super(caller);
  }

  public ExecutionTagDeleteBuilder id(Long value) {
    addId(value);
    return this;
  }

  public ExecutionTagDeleteBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public ExecutionTagDeleteBuilder workflowExecutionId(Long value) {
    addWhereConstraint(new WhereConstraint<Long>(ExecutionTag._Fields.workflow_execution_id, JackMatchers.equalTo(value)));
    return this;
  }

  public ExecutionTagDeleteBuilder whereWorkflowExecutionId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<Long>(ExecutionTag._Fields.workflow_execution_id, operator));
    return this;
  }

  public ExecutionTagDeleteBuilder tag(String value) {
    addWhereConstraint(new WhereConstraint<String>(ExecutionTag._Fields.tag, JackMatchers.equalTo(value)));
    return this;
  }

  public ExecutionTagDeleteBuilder whereTag(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(ExecutionTag._Fields.tag, operator));
    return this;
  }

  public ExecutionTagDeleteBuilder value(String value) {
    addWhereConstraint(new WhereConstraint<String>(ExecutionTag._Fields.value, JackMatchers.equalTo(value)));
    return this;
  }

  public ExecutionTagDeleteBuilder whereValue(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(ExecutionTag._Fields.value, operator));
    return this;
  }
}
