/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractDeleteBuilder;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.liveramp.databases.workflow_db.iface.IApplicationPersistence;
import com.liveramp.databases.workflow_db.models.Application;


public class ApplicationDeleteBuilder extends AbstractDeleteBuilder<Application> {

  public ApplicationDeleteBuilder(IApplicationPersistence caller) {
    super(caller);
  }

  public ApplicationDeleteBuilder id(Long value) {
    addId(value);
    return this;
  }

  public ApplicationDeleteBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public ApplicationDeleteBuilder name(String value) {
    addWhereConstraint(new WhereConstraint<String>(Application._Fields.name, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationDeleteBuilder whereName(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<String>(Application._Fields.name, operator));
    return this;
  }

  public ApplicationDeleteBuilder appType(Integer value) {
    addWhereConstraint(new WhereConstraint<Integer>(Application._Fields.app_type, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationDeleteBuilder whereAppType(IWhereOperator<Integer> operator) {
    addWhereConstraint(new WhereConstraint<Integer>(Application._Fields.app_type, operator));
    return this;
  }
}
