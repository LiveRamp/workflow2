/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractQueryBuilder;
import com.rapleaf.jack.queries.Column;
import com.rapleaf.jack.queries.FieldSelector;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.rapleaf.jack.queries.QueryOrder;
import com.rapleaf.jack.queries.OrderCriterion;
import com.rapleaf.jack.queries.LimitCriterion;
import com.liveramp.databases.workflow_db.iface.IStepStatisticPersistence;
import com.liveramp.databases.workflow_db.models.StepStatistic;


public class StepStatisticQueryBuilder extends AbstractQueryBuilder<StepStatistic> {

  public StepStatisticQueryBuilder(IStepStatisticPersistence caller) {
    super(caller);
  }

  public StepStatisticQueryBuilder select(StepStatistic._Fields... fields) {
    for (StepStatistic._Fields field : fields){
      addSelectedField(new FieldSelector(field));
    }
    return this;
  }

  public StepStatisticQueryBuilder selectAgg(FieldSelector... aggregatedFields) {
    addSelectedFields(aggregatedFields);
    return this;
  }

  public StepStatisticQueryBuilder id(Long value) {
    addId(value);
    return this;
  }

  public StepStatisticQueryBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public StepStatisticQueryBuilder whereId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(Column.fromId(null), operator, null));
    return this;
  }

  public StepStatisticQueryBuilder limit(int offset, int nResults) {
    setLimit(new LimitCriterion(offset, nResults));
    return this;
  }

  public StepStatisticQueryBuilder limit(int nResults) {
    setLimit(new LimitCriterion(nResults));
    return this;
  }

  public StepStatisticQueryBuilder groupBy(StepStatistic._Fields... fields) {
    addGroupByFields(fields);
    return this;
  }

  public StepStatisticQueryBuilder order() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public StepStatisticQueryBuilder order(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public StepStatisticQueryBuilder orderById() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public StepStatisticQueryBuilder orderById(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public StepStatisticQueryBuilder stepAttemptId(Long value) {
    addWhereConstraint(new WhereConstraint<>(StepStatistic._Fields.step_attempt_id, JackMatchers.equalTo(value)));
    return this;
  }

  public StepStatisticQueryBuilder whereStepAttemptId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(StepStatistic._Fields.step_attempt_id, operator));
    return this;
  }

  public StepStatisticQueryBuilder orderByStepAttemptId() {
    this.addOrder(new OrderCriterion(StepStatistic._Fields.step_attempt_id, QueryOrder.ASC));
    return this;
  }

  public StepStatisticQueryBuilder orderByStepAttemptId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(StepStatistic._Fields.step_attempt_id, queryOrder));
    return this;
  }

  public StepStatisticQueryBuilder name(String value) {
    addWhereConstraint(new WhereConstraint<>(StepStatistic._Fields.name, JackMatchers.equalTo(value)));
    return this;
  }

  public StepStatisticQueryBuilder whereName(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<>(StepStatistic._Fields.name, operator));
    return this;
  }

  public StepStatisticQueryBuilder orderByName() {
    this.addOrder(new OrderCriterion(StepStatistic._Fields.name, QueryOrder.ASC));
    return this;
  }

  public StepStatisticQueryBuilder orderByName(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(StepStatistic._Fields.name, queryOrder));
    return this;
  }

  public StepStatisticQueryBuilder value(Long value) {
    addWhereConstraint(new WhereConstraint<>(StepStatistic._Fields.value, JackMatchers.equalTo(value)));
    return this;
  }

  public StepStatisticQueryBuilder whereValue(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(StepStatistic._Fields.value, operator));
    return this;
  }

  public StepStatisticQueryBuilder orderByValue() {
    this.addOrder(new OrderCriterion(StepStatistic._Fields.value, QueryOrder.ASC));
    return this;
  }

  public StepStatisticQueryBuilder orderByValue(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(StepStatistic._Fields.value, queryOrder));
    return this;
  }
}
