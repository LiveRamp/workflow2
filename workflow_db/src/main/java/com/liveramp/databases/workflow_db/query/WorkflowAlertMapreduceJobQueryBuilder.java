/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractQueryBuilder;
import com.rapleaf.jack.queries.Column;
import com.rapleaf.jack.queries.FieldSelector;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.rapleaf.jack.queries.QueryOrder;
import com.rapleaf.jack.queries.OrderCriterion;
import com.rapleaf.jack.queries.LimitCriterion;
import com.liveramp.databases.workflow_db.iface.IWorkflowAlertMapreduceJobPersistence;
import com.liveramp.databases.workflow_db.models.WorkflowAlertMapreduceJob;


public class WorkflowAlertMapreduceJobQueryBuilder extends AbstractQueryBuilder<WorkflowAlertMapreduceJob> {

  public WorkflowAlertMapreduceJobQueryBuilder(IWorkflowAlertMapreduceJobPersistence caller) {
    super(caller);
  }

  public WorkflowAlertMapreduceJobQueryBuilder select(WorkflowAlertMapreduceJob._Fields... fields) {
    for (WorkflowAlertMapreduceJob._Fields field : fields){
      addSelectedField(new FieldSelector(field));
    }
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder selectAgg(FieldSelector... aggregatedFields) {
    addSelectedFields(aggregatedFields);
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder id(Long value) {
    addId(value);
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder whereId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(Column.fromId(null), operator, null));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder limit(int offset, int nResults) {
    setLimit(new LimitCriterion(offset, nResults));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder limit(int nResults) {
    setLimit(new LimitCriterion(nResults));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder groupBy(WorkflowAlertMapreduceJob._Fields... fields) {
    addGroupByFields(fields);
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder order() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder order(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder orderById() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder orderById(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder workflowAlertId(Long value) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertMapreduceJob._Fields.workflow_alert_id, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder whereWorkflowAlertId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertMapreduceJob._Fields.workflow_alert_id, operator));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder orderByWorkflowAlertId() {
    this.addOrder(new OrderCriterion(WorkflowAlertMapreduceJob._Fields.workflow_alert_id, QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder orderByWorkflowAlertId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(WorkflowAlertMapreduceJob._Fields.workflow_alert_id, queryOrder));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder mapreduceJobId(Long value) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertMapreduceJob._Fields.mapreduce_job_id, JackMatchers.equalTo(value)));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder whereMapreduceJobId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(WorkflowAlertMapreduceJob._Fields.mapreduce_job_id, operator));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder orderByMapreduceJobId() {
    this.addOrder(new OrderCriterion(WorkflowAlertMapreduceJob._Fields.mapreduce_job_id, QueryOrder.ASC));
    return this;
  }

  public WorkflowAlertMapreduceJobQueryBuilder orderByMapreduceJobId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(WorkflowAlertMapreduceJob._Fields.mapreduce_job_id, queryOrder));
    return this;
  }
}
