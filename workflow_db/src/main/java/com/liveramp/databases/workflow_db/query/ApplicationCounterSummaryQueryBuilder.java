/**
 * Autogenerated by Jack
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.liveramp.databases.workflow_db.query;

import java.util.Collection;

import com.rapleaf.jack.queries.AbstractQueryBuilder;
import com.rapleaf.jack.queries.Column;
import com.rapleaf.jack.queries.FieldSelector;
import com.rapleaf.jack.queries.where_operators.IWhereOperator;
import com.rapleaf.jack.queries.where_operators.JackMatchers;
import com.rapleaf.jack.queries.WhereConstraint;
import com.rapleaf.jack.queries.QueryOrder;
import com.rapleaf.jack.queries.OrderCriterion;
import com.rapleaf.jack.queries.LimitCriterion;
import com.liveramp.databases.workflow_db.iface.IApplicationCounterSummaryPersistence;
import com.liveramp.databases.workflow_db.models.ApplicationCounterSummary;


public class ApplicationCounterSummaryQueryBuilder extends AbstractQueryBuilder<ApplicationCounterSummary> {

  public ApplicationCounterSummaryQueryBuilder(IApplicationCounterSummaryPersistence caller) {
    super(caller);
  }

  public ApplicationCounterSummaryQueryBuilder select(ApplicationCounterSummary._Fields... fields) {
    for (ApplicationCounterSummary._Fields field : fields){
      addSelectedField(new FieldSelector(field));
    }
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder selectAgg(FieldSelector... aggregatedFields) {
    addSelectedFields(aggregatedFields);
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder id(Long value) {
    addId(value);
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder idIn(Collection<Long> values) {
    addIds(values);
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder whereId(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(Column.fromId(null), operator, null));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder limit(int offset, int nResults) {
    setLimit(new LimitCriterion(offset, nResults));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder limit(int nResults) {
    setLimit(new LimitCriterion(nResults));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder groupBy(ApplicationCounterSummary._Fields... fields) {
    addGroupByFields(fields);
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder order() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder order(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderById() {
    this.addOrder(new OrderCriterion(QueryOrder.ASC));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderById(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(queryOrder));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder applicationId(Integer value) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.application_id, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder whereApplicationId(IWhereOperator<Integer> operator) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.application_id, operator));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByApplicationId() {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.application_id, QueryOrder.ASC));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByApplicationId(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.application_id, queryOrder));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder group(String value) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.group, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder whereGroup(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.group, operator));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByGroup() {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.group, QueryOrder.ASC));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByGroup(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.group, queryOrder));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder name(String value) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.name, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder whereName(IWhereOperator<String> operator) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.name, operator));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByName() {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.name, QueryOrder.ASC));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByName(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.name, queryOrder));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder value(Long value) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.value, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder whereValue(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.value, operator));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByValue() {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.value, QueryOrder.ASC));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByValue(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.value, queryOrder));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder date(Long value) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.date, JackMatchers.equalTo(value)));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder whereDate(IWhereOperator<Long> operator) {
    addWhereConstraint(new WhereConstraint<>(ApplicationCounterSummary._Fields.date, operator));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByDate() {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.date, QueryOrder.ASC));
    return this;
  }

  public ApplicationCounterSummaryQueryBuilder orderByDate(QueryOrder queryOrder) {
    this.addOrder(new OrderCriterion(ApplicationCounterSummary._Fields.date, queryOrder));
    return this;
  }
}
